package main

import (
	"fmt"
	"log"
	"os"
	"sync"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"github.com/joho/godotenv"
	cmd "main.go/Commands"
)

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π
const (
	IdleState = iota
	WaitingForImageState
	WaitingForProcessing
	WaitingForImageToRemoveBackground
	WaitingForProcessingRemoveBg
	WaitingForVectorizingPicture
)

var (
	userStates        = make(map[int64]int)
	userActiveCommand = make(map[int64]string)
	mu                sync.RWMutex
)

const (
	CommandStart            = "start"
	CommandUpscaleImageX2   = "upscale_image_x2"
	CommandUpscaleImageX4   = "upscale_image_x4"
	CommandUpscaleImageX6   = "upscale_image_x6"
	CommandUpscaleImageX8   = "upscale_image_x8"
	CommandRemoveBackground = "remove_background"
	CommandHelp             = "help"
)

func init() {
	// loads values from .env into the system
	if err := godotenv.Load(); err != nil {
		log.Println("\033[31m[Error]\033[0m –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω.")
	}
}

func main() {
	TOKEN, _ := os.LookupEnv("TOKEN")
	bot, err := tgbotapi.NewBotAPI(TOKEN)
	if err != nil {
		log.Fatal(err)
	}

	//fmt.Println("\033[31m–ö—Ä–∞—Å–Ω—ã–π —Ç–µ–∫—Å—Ç\033[0m")

	u := tgbotapi.NewUpdate(0)
	u.Timeout = 20

	updatesChan := bot.GetUpdatesChan(u)
	log.Println("\033[32m[INFO]\033[0m –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –≥–æ—Ä—É—Ç–∏–Ω–µ, —á—Ç–æ–±—ã –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π –ø–æ—Ç–æ–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
	var wg sync.WaitGroup

	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
	for update := range updatesChan {
		if update.Message != nil {
			wg.Add(1)
			go func(update tgbotapi.Update) {
				defer wg.Done()
				processUpdate(bot, update)
			}(update)
		}
	}
	wg.Wait()
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
func processUpdate(bot *tgbotapi.BotAPI, update tgbotapi.Update) {
	chatID := update.Message.Chat.ID
	mu.Lock()
	state := userStates[chatID]
	mu.Unlock()

	if update.Message.IsCommand() {
		handleIdleState(bot, update)
	} else {
		switch state {
		case WaitingForImageState:
			handleWaitingForImageState(bot, update)
		case WaitingForImageToRemoveBackground:
			handleWaitingForImageToRemoveBackground(bot, update)
		}
	}

}

func handleIdleState(bot *tgbotapi.BotAPI, update tgbotapi.Update) {
	chatID := update.Message.Chat.ID
	command := update.Message.Command()
	messageForUserToUpscaleImage := tgbotapi.NewMessage(chatID, "üåü‚ú® –ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –≤–∏–¥–µ —Ñ–∞–π–ª–∞ –∏–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ –Ω–µ–≥–æ, –∏ —è –ø—Ä–µ–≤—Ä–∞—â—É –µ–≥–æ –≤ –Ω–∞—Å—Ç–æ—è—â–∏–π —à–µ–¥–µ–≤—Ä! üé®üí´ –í–∞—à–µ —Ñ–æ—Ç–æ –∑–∞—Å–∏—è–µ—Ç –Ω–æ–≤—ã–º–∏ –∫—Ä–∞—Å–∫–∞–º–∏! üì∏üå†")
	switch command {
	case CommandStart:
		sendStartMessage(bot, chatID)
		setUserState(chatID, IdleState, CommandStart)
		log.Printf("\033[32m[INFO]\033[0m –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [%d] –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è –∫–æ–º–∞–Ω–¥–æ–π [%s]", chatID, command)
	case CommandUpscaleImageX2, CommandUpscaleImageX4, CommandUpscaleImageX6, CommandUpscaleImageX8:
		bot.Send(messageForUserToUpscaleImage)
		setUserState(chatID, WaitingForImageState, command)
		log.Printf("\033[32m[INFO]\033[0m –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [%d] –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è –∫–æ–º–∞–Ω–¥–æ–π [%s]", chatID, command)
	case CommandRemoveBackground:
		bot.Send(messageForUserToUpscaleImage)
		setUserState(chatID, WaitingForImageToRemoveBackground, command)
		log.Printf("\033[32m[INFO]\033[0m –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [%d] –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è –∫–æ–º–∞–Ω–¥–æ–π [%s]", chatID, command)
	case CommandHelp:
		sendHelpMessage(bot, chatID)
		log.Printf("\033[32m[INFO]\033[0m –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [%d] –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è –∫–æ–º–∞–Ω–¥–æ–π [%s]", chatID, command)
	}
}

func handleWaitingForImageState(bot *tgbotapi.BotAPI, update tgbotapi.Update) {
	go cmd.Upscale_image(bot, update, &userStates, &userActiveCommand)
}

func handleWaitingForImageToRemoveBackground(bot *tgbotapi.BotAPI, update tgbotapi.Update) {
	go cmd.Remove_background_image(bot, update, &userStates, &userActiveCommand)
}

func sendHelpMessage(bot *tgbotapi.BotAPI, chatID int64) {
	startMessage := tgbotapi.NewAnimation(chatID, tgbotapi.FileURL("https://c.tenor.com/h9Izn8ibp4AAAAAd/tenor.gif"))
	startMessage.Caption = fmt.Sprintf("üåü –í–æ—Ç —Å–ø–∏—Å–æ–∫ –º–æ–∏—Ö –∫–æ–º–∞–Ω–¥: üöÄ‚ú®\n\n" +
		"üîπ /start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å–æ –º–Ω–æ–π. –Ø —Ä–∞—Å—Å–∫–∞–∂—É, –∫–∞–∫ –≤—Å—ë —É—Å—Ç—Ä–æ–µ–Ω–æ!\n" +
		"üîπ /help - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.\n" +
		"üîπ /upscale_image_x2 - –£–≤–µ–ª–∏—á–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ 2 —Ä–∞–∑–∞.\n" +
		"üîπ /upscale_image_x4 - –£–≤–µ–ª–∏—á–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ 4 —Ä–∞–∑–∞.\n" +
		"üîπ /upscale_image_x6 - –£–≤–µ–ª–∏—á–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ 6 —Ä–∞–∑–∞.\n" +
		"üîπ /upscale_image_x8 - –£–≤–µ–ª–∏—á–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ 8 —Ä–∞–∑–∞.\n" +
		"üîπ /remove_background - –£–¥–∞–ª–∏—Ç—å —Ñ–æ–Ω —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.\n\n" +
		"–í—ã–±–∏—Ä–∞–π –Ω—É–∂–Ω—É—é –∫–æ–º–∞–Ω–¥—É, –∏ —è –ø–æ–º–æ–≥—É —Å–¥–µ–ª–∞—Ç—å —Ç–≤–æ–∏ —Ñ–æ—Ç–æ –µ—â—ë –ª—É—á—à–µ! üé®üí´\n" +
		"–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!üòäüöÄ")
	startMessage.ParseMode = "HTML"
	_, err := bot.Send(startMessage)
	if err != nil {
		log.Println("\033[31m[Error]\033[0m –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ GIF:", err)
	}
}

func sendStartMessage(bot *tgbotapi.BotAPI, chatID int64) {
	startMessage := tgbotapi.NewAnimation(chatID, tgbotapi.FileURL("https://gifs.obs.ru-moscow-1.hc.sbercloud.ru/4fdc711265b196861471c3b2a2ce51aa4ced8c09bfe12493a5edbc1e1a8e3700.gif"))
	startMessage.Caption = fmt.Sprintf("üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –≤–∞–º —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∏ —Ñ–∞–π–ª–æ–≤. üì∏üìÅ\n\n" +
		"–í–æ—Ç —á—Ç–æ —è —É–º–µ—é:\n\n" +
		"üõ† –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª–æ–≤\n" +
		"‚ú® –£–ª—É—á—à–∞—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π\n" +
		"üßπ –£–¥–∞–ª—è—Ç—å –≤–æ–¥—è–Ω—ã–µ –∑–Ω–∞–∫–∏ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π\n" +
		"üîÑ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤—ã–≤–∞—Ç—å —Ñ–∞–π–ª—ã –≤ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã\n\n" +
		"–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –º–æ–∏—Ö —Ñ—É–Ω–∫—Ü–∏—è—Ö, –ø—Ä–æ—Å—Ç–æ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /help. –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å —Ñ–∞–π–ª –∏–ª–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ—ë –º–Ω–µ, –∏ —è –≤–æ–∑—å–º—É—Å—å –∑–∞ –¥–µ–ª–æ! üòä\n\n" +
		"–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–º–æ—â—å, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –æ–±—Ä–∞—â–∞—Ç—å—Å—è. –Ø –≤—Å–µ–≥–¥–∞ —Ä–∞–¥ –ø–æ–º–æ—á—å!")
	startMessage.ParseMode = "HTML"
	_, err := bot.Send(startMessage)
	if err != nil {
		log.Println("\033[31m[Error]\033[0m –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ GIF:", err)
	}
}

func setUserState(chatID int64, state int, command string) {
	mu.Lock()
	defer mu.Unlock()
	userStates[chatID] = state
	userActiveCommand[chatID] = command

}
