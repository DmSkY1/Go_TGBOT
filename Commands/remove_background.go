package Commands

import (
	"fmt"
	"log"
	"os"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	installPhoto "main.go/INSTALL_PICTURE"
	post_file "main.go/POST"
	rand_key "main.go/RandomKey"
)

const (
	IdleState = iota
	WaitingForImageToRemoveBackground
	WaitingForProcessingRemoveBg
)

func Remove_background_image(bot *tgbotapi.BotAPI, update tgbotapi.Update, user_state *map[int64]int, user_active_command *map[int64]string) {
	chatID := update.Message.Chat.ID
	messageID := update.Message.MessageID

	if update.Message.Photo != nil {
		log.Printf("\033[32m[INFO]\033[0m –ü–æ–ª—É—á–µ–Ω–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. ChatID [%d]", chatID)
		setUserState(chatID, user_state, WaitingForProcessingRemoveBg)
		photo := update.Message.Photo
		fileID := photo[len(photo)-1].FileID
		file, err := bot.GetFile(tgbotapi.FileConfig{FileID: fileID})
		if err != nil {
			log.Println("\033[31m[Error]\033[0m –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ id —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏:", err)
			return
		}
		log.Printf("\033[32m[INFO]\033[0m ID —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø–æ–ª—É—á–µ–Ω–æ. ChatID [%d]", chatID)

		infoMessage(bot, chatID, messageID)

		// –ü–æ–ª—É—á–∞–µ–º –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–∞–π–ª —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
		fileURL := file.Link(bot.Token)
		if err := installPhoto.InstallPhoto(fmt.Sprintf("picture/%s.jpeg", fileID), fileURL); err != nil {
			log.Println(err)
			return
		} // —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –≤ –ø–∞–ø–∫—É picture
		log.Printf("\033[32m[INFO]\033[0m –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–µ–Ω–∞. ChatID [%d]", chatID)

		api_key, err := rand_key.GetRandomAPIKey()
		if err != nil {
			log.Println("\033[31m[Error]\033[0m –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ API-–∫–ª—é—á–∞:", err)
			return
		}
		log.Printf("\033[32m[INFO]\033[0m API –∫–ª—é—á —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω. ChatID [%d]", chatID)

		result, err := post_file.RemoveBackground(api_key, fmt.Sprintf("picture/%s.jpeg", fileID))
		if err != nil {
			log.Println(err)
			return
		}
		log.Printf("\033[32m[INFO]\033[0m –î–æ–∫—É–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω. ChatID [%d]", chatID)

		if err = os.Remove(fmt.Sprintf("picture/%s.jpeg", fileID)); err != nil {
			log.Println("\033[31m[Error]\033[0m –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏:", err)
			return
		}

		document := tgbotapi.NewDocument(chatID, tgbotapi.FileURL(result))
		document.Caption = fmt.Sprintf("üéØ *–ì–æ—Ç–æ–≤–æ!* üéØ\n\n" +
			"üéâ –í–∞—à–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–ø–µ—Ä—å –≤—ã–≥–ª—è–¥–∏—Ç –ª—É—á—à–µ! üì∏üåà\n\n" +
			"üîç _–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –∏ –Ω–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º!_ üòä")
		_, err = bot.Send(document)
		if err != nil {
			log.Println("\033[31m[Error]\033[0m –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞:", err)
			return
		}
		log.Printf("\033[32m[INFO]\033[0m –î–æ–∫—É–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω. ChatID [%d]", chatID)

		go func() {
			deleteMsg := tgbotapi.NewDeleteMessage(chatID, update.Message.MessageID+1)
			if _, err := bot.Request(deleteMsg); err != nil {
				log.Println("\033[31m[Error]\033[0m –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:", err)
				return
			}
			log.Printf("\033[32m[INFO]\033[0m –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ. ChatID [%d]", chatID)
		}()
		setUserState(chatID, user_state, IdleState)

	} else if update.Message.Document != nil && isImageFile(update.Message.Document) {
		log.Printf("\033[32m[INFO]\033[0m –ü–æ–ª—É—á–µ–Ω–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. ChatID [%d]", chatID)
		setUserState(chatID, user_state, WaitingForProcessingRemoveBg)
		infoMessage(bot, chatID, messageID)

		fileID := update.Message.Document.FileID
		file, err := bot.GetFile(tgbotapi.FileConfig{FileID: fileID})
		if err != nil {
			log.Println("\033[31m[Error]\033[0m –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ id —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏:", err)
			return
		}
		log.Printf("\033[32m[INFO]\033[0m ID —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø–æ–ª—É—á–µ–Ω–æ. ChatID [%d]", chatID)

		download_url := fmt.Sprintf("https://api.telegram.org/file/bot%s/%s", bot.Token, file.FilePath)
		filepath := fmt.Sprintf("picture/%s_%s", fileID, update.Message.Document.FileName)

		if err = installPhoto.InstallPhoto(filepath, download_url); err != nil {
			log.Println(err)
			return
		}
		log.Printf("\033[32m[INFO]\033[0m –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–µ–Ω–∞. ChatID [%d]", chatID)

		api_key, err := rand_key.GetRandomAPIKey()
		if err != nil {
			log.Println("\033[31m[Error]\033[0m –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ API-–∫–ª—é—á–∞:", err)
			return
		}
		log.Printf("\033[32m[INFO]\033[0m API –∫–ª—é—á —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω. ChatID [%d]", chatID)

		result, err := post_file.RemoveBackground(api_key, filepath)
		if err != nil {
			log.Println(err)
			return
		}
		log.Printf("\033[32m[INFO]\033[0m –î–æ–∫—É–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω. ChatID [%d]", chatID)

		if err = os.Remove(filepath); err != nil {
			log.Println("\033[31m[Error]\033[0m –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏:", err)
			return
		}

		document := tgbotapi.NewDocument(chatID, tgbotapi.FileURL(result))
		document.Caption = fmt.Sprintf("üéØ *–ì–æ—Ç–æ–≤–æ!* üéØ\n\n" +
			"üéâ –í–∞—à–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–ø–µ—Ä—å –≤—ã–≥–ª—è–¥–∏—Ç –ª—É—á—à–µ! üì∏üåà\n\n" +
			"üîç _–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –∏ –Ω–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º!_ üòä")
		_, err = bot.Send(document)
		if err != nil {
			log.Println("\033[31m[Error]\033[0m –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞:", err)
			return
		}
		log.Printf("\033[32m[INFO]\033[0m –î–æ–∫—É–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω. ChatID [%d]", chatID)
		go func() {
			deleteMsg := tgbotapi.NewDeleteMessage(chatID, update.Message.MessageID+1)
			_, err := bot.Request(deleteMsg)
			if err != nil {
				log.Println("\033[31m[Error]\033[0m –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:", err)
				return
			}
			log.Printf("\033[32m[INFO]\033[0m –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ. ChatID [%d]", chatID)
		}()
		setUserState(chatID, user_state, IdleState)

	} else if update.Message != nil && update.Message.Text != "" {
		msg := tgbotapi.NewMessage(chatID, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é. –ë–æ—Ç –Ω–µ –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤–∞—à —Ç–µ–∫—Å—Ç. –Ø –±—É–¥—É –∂–¥–∞—Ç—å –≤–∞—â–µ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ ))")
		bot.Send(msg)
		return
	} else {
		errorMessage_url := tgbotapi.NewAnimation(chatID, tgbotapi.FileURL("https://gifs.obs.ru-moscow-1.hc.sbercloud.ru/1d06b49de1ac9de5cbc468d1d449d74658d39b7471c689cf5ec7570106908a9e.gif"))
		errorMessage_url.Caption = fmt.Sprintf("üö´ <i><strong>–û—à–∏–±–∫–∞! –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∑–∞–ø—Ä–æ—Å–∞.</strong></i> –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é URL-–∞–¥—Ä–µ—Å –Ω–∞ –Ω–µ–µ. üåê\n\n"+
			"–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /%s —Å <strong>–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º URL.</strong>‚ö†Ô∏è", (*user_active_command)[chatID])
		errorMessage_url.ParseMode = "HTML"
		errorMessage_url.ReplyToMessageID = messageID // –£–∫–∞–∑—ã–≤–∞–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ—Ç–≤–µ—Ç–∞
		_, err := bot.Send(errorMessage_url)
		if err != nil {
			log.Println("\033[31m[Error]\033[0m –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ GIF:", err)
			return
		}
		return

	}
}

func infoMessage(bot *tgbotapi.BotAPI, chatID int64, messageID int) {
	photoMsg := tgbotapi.NewAnimation(chatID, tgbotapi.FileURL("https://i.gifer.com/origin/38/3823ad20629c89b3dd4821b80eee79eb_w200.gif"))
	photoMsg.ReplyToMessageID = messageID
	photoMsg.Caption = fmt.Sprintf("üì∏ –í–∞—à–µ —Ñ–æ—Ç–æ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ! üöÄ\n" +
		"–Ø –∑–∞–Ω–∏–º–∞—é—Å—å —É–ª—É—á—à–µ–Ω–∏–µ–º –∏ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ–º –≤–∞—à–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è. –≠—Ç–æ –∑–∞–π–º–µ—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ 10 —Å–µ–∫—É–Ω–¥. ‚è≥‚ú®\n\n" +
		"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ, –∏ –≤–∞—à–µ —Ñ–æ—Ç–æ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–æ –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É. –°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–µ—Ä–ø–µ–Ω–∏–µ! üòä")
	_, err := bot.Send(photoMsg)
	if err != nil {
		log.Println("\033[31m[Error]\033[0m –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è", err)
		return
	}
}
