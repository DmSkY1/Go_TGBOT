package Commands

import (
	"fmt"
	"log"
	"os"
	"path/filepath"
	"strconv"
	"strings"
	"sync"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	installPhoto "main.go/INSTALL_PICTURE"
	post_file "main.go/POST"
	rand_key "main.go/RandomKey"
)

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π—ã
const (
	pass = iota
	WaitingForImageState
	RemoveLastImage
)

// –°–æ—Å—Ç–æ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
var (
	userStates = make(map[int64]int64)
	mu         sync.RWMutex
	wg         sync.WaitGroup
)

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏–π upscale_image
func Upscale_image(bot *tgbotapi.BotAPI, update tgbotapi.Update, us_state *map[int64]int, us_active_commang *map[int64]string) {

	// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω—É–∂–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
	chatID := update.Message.Chat.ID
	messageID := update.Message.MessageID
	mu.RLock()
	state := userStates[chatID]
	mu.RUnlock()

	// –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–∂–∞—Ç–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–µ–π
	if update.Message.Photo != nil {
		invalidFormatMessage(bot, chatID, messageID, us_active_commang)
		setUserState(chatID, us_state)
		return

	} else if update.Message.Document != nil && isImageFile(update.Message.Document) { // –ü—Ä–æ–≤–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–º
		mu.RLock()
		userStates[chatID] = WaitingForImageState
		mu.RUnlock()
		informationMessage(bot, chatID, messageID)

		// –ü–æ–ª—É—á–∞–µ–º API-–∫–ª—é—á –∏–∑ —Ñ–∞–π–ª–∞
		api_key, err := rand_key.GetRandomAPIKey()
		if err != nil {
			log.Println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ API-–∫–ª—é—á–∞:", err)
			return
		}

		// –ü–æ–ª—É—á–µ–Ω–∏–µ id –¥–æ–∫—É–º–µ–Ω—Ç–∞
		fileID := update.Message.Document.FileID
		file, err := bot.GetFile(tgbotapi.FileConfig{FileID: fileID})
		if err != nil {
			log.Println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞:", err)
			return
		}

		// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è
		downloadURL := fmt.Sprintf("https://api.telegram.org/file/bot%s/%s", bot.Token, file.FilePath)
		filepath := filepath.Join("picture", fmt.Sprintf("%s_%s", fileID, update.Message.Document.FileName))

		// –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª –∏–∑ Telegram API
		err = installPhoto.InstallPhoto(filepath, downloadURL)
		if err != nil {
			log.Println("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞:", err)
		}

		// –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–Ω—á–µ–Ω–∏—è –ø–æ —É–ª—É—á—à–µ–Ω–∏—é –∫–∞—á–µ—Å—Ç–≤–∞
		upscale_factor := (*us_active_commang)[chatID][len((*us_active_commang)[chatID])-2:]
		// log.Println(upscale_factor)
		wg.Add(1)
		go func() {
			defer wg.Done()
			// –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
			result, err := post_file.PostImage(api_key, filepath, upscale_factor)
			if err != nil {
				setUserState(chatID, us_state)

				//–£–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
				wg.Add(1)
				go func() {
					defer wg.Done()
					deleteMsg := tgbotapi.NewDeleteMessage(chatID, update.Message.MessageID+1)
					if _, err := bot.Request(deleteMsg); err != nil {
						log.Println("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:", err)
					}
					// https://s7.gifyu.com/images/SGWok.gif –º–∏—Ç—Å—É—Ä–∏
					// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≥–∏—Ñ–æ–º –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –ø–æ–¥–ø–∏—Å—å—é
					photoMsg := tgbotapi.NewAnimation(chatID, tgbotapi.FileURL("https://media1.tenor.com/m/SkLMJf60EyQAAAAd/%D0%B0%D0%BD%D0%B8%D0%BC%D0%B5.gif"))
					photoMsg.ReplyToMessageID = update.Message.MessageID
					photoMsg.Caption = "üö´ –£–ø—Å, –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–∞—à—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é!\nüòü–í–µ—Ä–æ—è—Ç–Ω–æ, —Ñ–∞–π–ª –ø–æ–≤—Ä–µ–∂–¥—ë–Ω –∏–ª–∏ –µ–≥–æ —Ñ–æ—Ä–º–∞—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π üõ†Ô∏è.\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥—Ä—É–≥–æ–π —Ñ–∞–π–ª!üì∏"

					// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≥–∏—Ñ–æ–º
					if _, err := bot.Send(photoMsg); err != nil {
						log.Println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∞–Ω–∏–º–∞—Ü–∏–∏:", err)
					}
				}()
				return
			}

			defer os.Remove(filepath) // –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏

			document := tgbotapi.NewDocument(chatID, tgbotapi.FileURL(result)) // –û—Ç–ø—Ä–∞–≤–∫–∞ –≥–æ—Ç–æ–≤–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
			document.Caption = "üéØ *–ì–æ—Ç–æ–≤–æ!* üéØ\n\n" +
				"üéâ –í–∞—à–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–ø–µ—Ä—å –≤—ã–≥–ª—è–¥–∏—Ç –ª—É—á—à–µ! üì∏üåà\n\n" +
				"üîç –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –∏ –Ω–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º! üòä"
			log.Println(result)
			// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
			_, err = bot.Send(document)
			if err != nil {

				log.Println("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞121:", err)
			}
			wg.Add(1)
			go func() {
				defer wg.Done()
				deleteMsg := tgbotapi.NewDeleteMessage(chatID, update.Message.MessageID+1)
				if _, err := bot.Request(deleteMsg); err != nil {
					log.Println("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:", err)
				}
			}()
		}()
		wg.Wait()
		return

	} else if update.Message != nil && update.Message.Text != "" {
		if strings.HasPrefix(update.Message.Text, "https://") || strings.HasPrefix(update.Message.Text, "http://") {
			mu.Lock()
			userStates[chatID] = WaitingForImageState
			mu.Unlock()
			informationMessage(bot, chatID, messageID)

			api_key, err := rand_key.GetRandomAPIKey()
			if err != nil {
				log.Println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ API-–∫–ª—é—á–∞:", err)
				return
			}

			upscale_factor := (*us_active_commang)[chatID][len((*us_active_commang)[chatID])-2:]
			url := update.Message.Text

			wg.Add(1)
			go func() {
				defer wg.Done()
				// –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞
				res, err := post_file.DownloadFileUrl(url, "URl_Image", strconv.Itoa(int(chatID)))
				if err != nil {
					log.Println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞:", err)
					return
				}

				// –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É
				res_post, err := post_file.PostImage(api_key, res, upscale_factor)
				if err != nil {
					log.Println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ—Å—Ç –ó–∞–ø—Ä–æ—Å–∞ 2")
					return
				}

				// –£–¥–∞–ª–µ–Ω–∏–µ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
				defer os.Remove(res)

				// –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞
				end_download, err := post_file.DownloadFileUrl(res_post, "URl_Image", strconv.Itoa(int(chatID)))
				if err != nil {
					log.Println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞:", err)
					return
				}

				// –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞
				document := tgbotapi.NewDocument(chatID, tgbotapi.FileID(res))
				document.Caption = fmt.Sprintf("üéØ *–ì–æ—Ç–æ–≤–æ!* üéØ\n\n" +
					"üéâ –í–∞—à–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–ø–µ—Ä—å –≤—ã–≥–ª—è–¥–∏—Ç –ª—É—á—à–µ! üì∏üåà\n\n" +
					"üîç _–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –∏ –Ω–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º!_ üòä")
				_, err = bot.Send(document)
				if err != nil {
					log.Println("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞:", err)
					return
				}

				// –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
				wg.Add(1)
				go func() {
					defer wg.Done()
					deleteMsg := tgbotapi.NewDeleteMessage(chatID, update.Message.MessageID+1)
					if _, err := bot.Request(deleteMsg); err != nil {
						log.Println("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:", err)
						return
					}
				}()

				// –£–¥–∞–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
				defer os.Remove(end_download)
				setUserState(chatID, us_state)
			}()
			wg.Wait()
			return
		} else {
			if state == WaitingForImageState {
				bot.Send(tgbotapi.NewMessage(chatID, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ, –∏ –≤–∞—à–µ —Ñ–æ—Ç–æ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–æ –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É. –°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–µ—Ä–ø–µ–Ω–∏–µ!"))
				return
			} else {
				errorMessage(bot, chatID, messageID, us_active_commang)
				setUserState(chatID, us_state)
				return
			}
		}
	}
}

func errorMessage(bot *tgbotapi.BotAPI, chatID int64, messageID int, us_active_commang *map[int64]string) {
	errorMessage_url := tgbotapi.NewAnimation(chatID, tgbotapi.FileURL("https://gifs.obs.ru-moscow-1.hc.sbercloud.ru/1d06b49de1ac9de5cbc468d1d449d74658d39b7471c689cf5ec7570106908a9e.gif"))
	errorMessage_url.Caption = fmt.Sprintf("üö´ <i><strong>–û—à–∏–±–∫–∞! –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∑–∞–ø—Ä–æ—Å–∞.</strong></i> –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π URL-–∞–¥—Ä–µ—Å. üåê\n\n"+
		"–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /%s —Å <strong>–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º URL.</strong>‚ö†Ô∏è", (*us_active_commang)[chatID])
	errorMessage_url.ParseMode = "HTML"
	errorMessage_url.ReplyToMessageID = messageID // –£–∫–∞–∑—ã–≤–∞–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ—Ç–≤–µ—Ç–∞
	bot.Send(errorMessage_url)
}

func informationMessage(bot *tgbotapi.BotAPI, chatID int64, messageID int) {
	// –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
	photoMsg := tgbotapi.NewAnimation(chatID, tgbotapi.FileURL("https://i.gifer.com/origin/38/3823ad20629c89b3dd4821b80eee79eb_w200.gif"))
	photoMsg.ReplyToMessageID = messageID
	photoMsg.Caption = "üì∏ –í–∞—à–µ —Ñ–æ—Ç–æ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ! üöÄ\n" +
		"–Ø –∑–∞–Ω–∏–º–∞—é—Å—å —É–ª—É—á—à–µ–Ω–∏–µ–º –∏ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ–º –≤–∞—à–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è. –≠—Ç–æ –∑–∞–π–º–µ—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ 10 —Å–µ–∫—É–Ω–¥. ‚è≥‚ú®\n\n" +
		"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ, –∏ –≤–∞—à–µ —Ñ–æ—Ç–æ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–æ –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É. –°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–µ—Ä–ø–µ–Ω–∏–µ! üòä"
	bot.Send(photoMsg)
}

func invalidFormatMessage(bot *tgbotapi.BotAPI, chatID int64, messageID int, us_active_commang *map[int64]string) {
	error_photo := tgbotapi.NewAnimation(chatID, tgbotapi.FileURL("https://gifs.obs.ru-moscow-1.hc.sbercloud.ru/6e330e6add14701f3a495e17e01e17cccb377fba621adb0f6aeec8430cfc5153.gif"))
	error_photo.Caption = fmt.Sprintf("üö´ <i><strong>–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∑–∞–ø—Ä–æ—Å–∞!</strong></i> –í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –∫–∞–∫ —Ñ–∞–π–ª (–Ω–∞–ø—Ä–∏–º–µ—Ä, JPEG –∏–ª–∏ PNG), –∞ –Ω–µ —Å–∂–∞—Ç–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ. üìÅ\n\n"+
		"–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /%s –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –≤ –≤–∏–¥–µ —Ñ–∞–π–ª–∞. ‚ö†Ô∏è", (*us_active_commang)[chatID])
	error_photo.ParseMode = "HTML"
	error_photo.ReplyToMessageID = messageID // –£–∫–∞–∑—ã–≤–∞–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ—Ç–≤–µ—Ç–∞
	_, err := bot.Send(error_photo)
	if err != nil {
		log.Println("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ GIF:", err)
	}
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–µ–π
func isImageFile(doc *tgbotapi.Document) bool {
	imageMimeTypes := []string{"image/jpeg", "image/png", "image/gif"}
	for _, mimeType := range imageMimeTypes {
		if doc.MimeType == mimeType {
			return true
		}
	}
	return false
}

func setUserState(chatID int64, us_state *map[int64]int) {
	mu.Lock()
	(*us_state)[chatID] = IdleState
	defer mu.Unlock()
}
